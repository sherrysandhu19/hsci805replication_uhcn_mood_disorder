# PROLOG   ###################################################################
# PROJECT:  Replication of "“McLeod, K. E., & Karim, M. E. (2020). The
#           relationship between mood disorder diagnosis and experiencing an
#           unmet health-care need in Canada: findings from the 2014 Canadian 
#           Community Health Survey. Journal of Mental Health, 1-13.”
# PURPOSE: for HSCI 805 Term Project 
# DIR:     CCHS Annual Component, 2014
# DATA:    https://hdl.handle.net/11272.1/AB2/XYIA6A,
#         
# AUTHOR:  Sherry Sandhu, MPH(c)
# CREATED: DEC 01, 2022
# LATEST:  DEC 18, 2022 
# NOTES:   for learning purposes only 
###initial steps####################################################################

#prepare environment  
install.packages("tidyverse")
install.packages("knitr")
install.packages("survey")
install.packages("srvyr")
library(survey)
library(srvyr)
library(tidyverse)
library(knitr)
#upload data 
library(readxl)
cchs2014 <- read_excel("/Users/sherrysandhu/Desktop/805project /cchs2014.xlsx")

########Step 1: exploratory analysis########## 

#make one way frequency tables 
table(cchs2014$CCC_280) #exposure variable for mood disorder  
table(cchs2014$UCN_010) #outcome variable for UHCN

#co-variates 

#predisposing factors 
table(cchs2014$DHHGAGE) #age 
table(cchs2014$DHH_SEX) #sex 
table(cchs2014$SDCGCGT) #race
table(cchs2014$EDUDH04) #education level 
table(cchs2014$SDCFIMM) #immigrant 
table(cchs2014$DHHGMS) #marital status 
table(cchs2014$GEN_10) #belonging to community 

#enabling factors 
table(cchs2014$INCG2) #household income
table(cchs2014$GEOGPRV) #province of residence 
table(cchs2014$HCU_1AA) #regular medical doctor 
table(cchs2014$DOINS) #extended health insurance 

#need factors 
table(cchs2014$LOPG050) #chronic conditions 
table(cchs2014$GEN_01) #perceived health

#check visual normal distribution of each variable 
Mood_Disorder <- cchs2014$CCC_280 
hist(Mood_Disorder)  ## non-normal, heavy skew right (no)

UHCN <- cchs2014$UCN_010 
hist(UHCN) ## non-normal, heavy skew right (no)

age <- cchs2014$DHHGAGE 
table(age)
hist(age) #normal, slight skew right (older)

sex <- cchs2014$DHH_SEX 
hist(sex) ##non-normal 

race <- cchs2014$SDCGCGT 
hist(race) ## non-normal, heavy skew left (white)

education_level <- cchs2014$EDUDH04 
hist(education_level) ##non-normal, heavy skew right (post-secondary)

immigrant <- cchs2014$SDCFIMM
hist(immigrant) ##non-normal, heavy skew right (no)

martial_status <- cchs2014$DHHGMS 
hist(martial_status) ##non-normal, skew right(never marry), mode(married)

sense_of_belonging <- cchs2014$GEN_10
hist(sense_of_belonging)##non-normal, skew left (somewhat strong)

household_income <- cchs2014$INCG2
hist(household_income) ##non-normal, skew left (employed)

province <- cchs2014$GEOGPRV 
hist(province)##non-normal, mode(Ontario)

regular_doctor <- cchs2014$HCU_1AA 
hist(regular_doctor) #non-normal, heavy skew left (yes)

health_insurance <- cchs2014$DOINS
hist(health_insurance) #non-normal, heavy skew right (no)

chronic_conditions <- cchs2014$LOPG050
hist(chronic_conditions) ##non_normal, heavy skew right (NA)

self_health <- cchs2014$GEN_01 
hist(self_health) ##non-normal, skew left (very good)

############step 2: make necessary exclusions to dataset######### 

#exclude age less than 18 
excluded <- subset(cchs2014,DHHGAGE >2)

#exclude any data that is "don't know, refused or not stated" 
#for explanatory variable 
full2014 <- subset(excluded,CCC_280 <3)
#for outcome variable 
full2014 <- subset(full2014,UCN_010 <3)
#covariates
full2014 <- subset(full2014,SDCGCGT<3) 
full2014 <- subset(full2014,EDUDH04<5)
full2014 <- subset(full2014,SDCFIMM<3)
full2014 <- subset(full2014,GEN_10<5)
full2014 <- subset(full2014,INCG2<5)
full2014 <- subset(full2014,HCU_1AA<3)
full2014 <- subset(full2014, GEN_01<6)
full2014 <- subset(full2014,DHHGMS<5)
full2014 <- subset(full2014,LOPG050<98)   

####with age less than 18 
#for explanatory variable 
with_age2014 <- subset(cchs2014,CCC_280 <3)
#for outcome variable 
with_age2014 <- subset(with_age2014,UCN_010 <3)
#covariates
with_age2014 <- subset(with_age2014,SDCGCGT<3) 
with_age2014 <- subset(with_age2014,EDUDH04<5)
with_age2014 <- subset(with_age2014,SDCFIMM<3)
with_age2014 <- subset(with_age2014,GEN_10<5)
with_age2014 <- subset(with_age2014,INCG2<5)
with_age2014 <- subset(with_age2014,HCU_1AA<3)
with_age2014 <- subset(with_age2014, GEN_01<6)
with_age2014 <- subset(with_age2014,DHHGMS<5)
with_age2014 <- subset(with_age2014,LOPG050<98) 

################step2.5 make descriptive tables for catergorical### 

#make two way tables 
table(full2014$CCC_280, full2014$UCN_010)
mood1 <- table(full2014$CCC_280,full2014$UCN_010)
chisq.test(mood1)

table(full2014$DHHGAGE,full2014$UCN_010)
age1 <- table(full2014$DHHGAGE,full2014$UCN_010)
chisq.test(age1)

table(full2014$INCG2,full2014$UCN_010)
income1 <- table(full2014$INCG2,full2014$UCN_010)
chisq.test(income1)

table(full2014$DHH_SEX,full2014$UCN_010)
sex1 <- table(full2014$DHH_SEX,full2014$UCN_010)
chisq.test(sex1)

table(full2014$SDCGCGT,full2014$UCN_010)
race1 <- table(full2014$SDCGCGT,full2014$UCN_010)
chisq.test(race1)

table(full2014$DHHGMS,full2014$UCN_010)
marry1 <- table(full2014$DHHGMS,full2014$UCN_010)
chisq.test(marry1)

table(full2014$GEN_10,full2014$UCN_010)
community1 <- table(full2014$GEN_10,full2014$UCN_010)
chisq.test(community1)

table(full2014$EDUDH04,full2014$UCN_010)
education1 <- table(full2014$EDUDH04,full2014$UCN_010)
chisq.test(education1)

table(full2014$SDCFIMM,full2014$UCN_010)
immigrant1 <- table(full2014$SDCFIMM,full2014$UCN_010)
chisq.test(immigrant1)

table(full2014$HCU_1AA,full2014$UCN_010)
doc1 <- table(full2014$HCU_1AA,full2014$UCN_010)
chisq.test(doc1)

table(full2014$DOINS,full2014$UCN_010)
insurance1 <- table(full2014$DOINS,full2014$UCN_010)
chisq.test(insurance1)

table(full2014$DOINS,full2014$UCN_010)
insurance1 <- table(full2014$DOINS,full2014$UCN_010)
chisq.test(insurance1)

table(full2014$GEN_01,full2014$UCN_010)
self1 <- table(full2014$GEN_01,full2014$UCN_010)
chisq.test(self1)

################Step 3: survey-weighted univariate analysis#####################
weight_full <- svydesign(ids=~1 , data = full2014, weights = full2014$WTS_M)
str(weight_full)
svymean(~DHHGAGE, weight_full)

svytable(~CCC_280 + UCN_010, weight_full, round=TRUE)
mood1 <- svytable(~CCC_280 + UCN_010, weight_full, round=TRUE)
svychisq(~CCC_280 + UCN_010, weight_full, na.rm=TRUE)

svytable(~GEOGPRV + UCN_010, weight_full, round=TRUE)
prov1 <- svytable(~GEOGPRV + UCN_010, weight_full, round=TRUE)
svychisq(~GEOGPRV + UCN_010, weight_full, na.rm=TRUE)

svytable(~DHHGAGE + UCN_010, weight_full, round=TRUE)
age1 <- svytable(~DHHGAGE + UCN_010, weight_full, round=TRUE)
svychisq(~DHHGAGE + UCN_010, weight_full, na.rm=TRUE)

svytable(~INCG2+UCN_010, weight_full, round=TRUE)
income1 <- svytable(~INCG2+UCN_010, weight_full, round=TRUE)
svychisq(~INCG2+UCN_010, weight_full, na.rm=TRUE)

svytable(~DHH_SEX + UCN_010, weight_full, round=TRUE)
sex1 <- svytable(~DHH_SEX + UCN_010, weight_full, round=TRUE)
svychisq(~DHH_SEX + UCN_010, weight_full, na.rm=TRUE)

svytable(~SDCGCGT+UCN_010,weight_full, round=TRUE)
race1 <- svytable(~SDCGCGT+UCN_010,weight_full, round=TRUE)
svychisq(~SDCGCGT+UCN_010, weight_full, na.rm=TRUE)

svytable(~DHHGMS+UCN_010,weight_full, round=TRUE)
marry1 <- svytable(~DHHGMS+UCN_010,weight_full, round=TRUE)
svychisq(~DHHGMS+UCN_010, weight_full, na.rm=TRUE)

svytable(~GEN_10+UCN_010, weight_full, round=TRUE)
community1 <- svytable(~GEN_10+UCN_010, weight_full, round=TRUE)
svychisq(~GEN_10+UCN_010, weight_full, na.rm=TRUE)

svytable(~EDUDH04+UCN_010, weight_full, round=TRUE)
education1 <- svytable(~EDUDH04+UCN_010, weight_full, round=TRUE)
svychisq(~EDUDH04+UCN_010, weight_full, na.rm=TRUE)

svytable(~SDCFIMM + UCN_010, weight_full, round=TRUE)
immigrant1 <- svytable(~SDCFIMM + UCN_010, weight_full, round=TRUE)
svychisq(~SDCFIMM + UCN_010, weight_full, na.rm=TRUE)

svytable(~HCU_1AA + UCN_010, weight_full, round=TRUE)
doc1 <- svytable(~HCU_1AA + UCN_010, weight_full, round=TRUE)
svychisq(~HCU_1AA + UCN_010, weight_full, na.rm=TRUE)

svytable(~DOINS+UCN_010, weight_full, round=TRUE)
insurance1 <- svytable(~DOINS+UCN_010, weight_full, round=TRUE)
svychisq(~DOINS+UCN_010, weight_full, na.rm=TRUE)

svytable(~GEN_01+UCN_010,weight_full, round=TRUE)
self1 <- svytable(~GEN_01+UCN_010,weight_full, round=TRUE)
svychisq(~GEN_01+UCN_010, weight_full, na.rm=TRUE)

######################Step 4: check assumptions#####################################

#collinearity 

(colnames(full2014))
print(cor(full2014[,c('CCC_280','UCN_010','GEOGPRV',
                      'DHHGAGE','INCG2','DHH_SEX',
                      'SDCGCGT', 'DHHGMS', 'GEN_10', 
                     'EDUDH04','SDCFIMM','HCU_1AA',
                      'DOINS','GEN_01')]))
#goodness of fit test 

mylogit<- svyglm(UCN_010~CCC_280+ DHHGAGE+ INCG2 +DHH_SEX 
                        + SDCGCGT + DHHGMS + GEN_10 + EDUDH04 +SDCFIMM
                        + HCU_1AA + DOINS + GEN_01 + GEOGPRV, weight_full, 
                         start =NULL, rescale=TRUE, influence= FALSE)

ks.test(full2014$CCC_280,full2014$UCN_010,mylogit)

#collinearity 
library(car)
vif(mylogit)

###############Step 5: select model for logistic regression########## 
#backward selection 
library(MASS)

mylogit<- svyglm(UCN_010~CCC_280+ DHHGAGE+ INCG2 +DHH_SEX 
                 + SDCGCGT + DHHGMS + GEN_10 + EDUDH04 +SDCFIMM
                 + HCU_1AA + DOINS + GEN_01 + GEOGPRV, weight_full, 
                 start =NULL, rescale=TRUE, influence= FALSE)

step.model <- stepAIC(mylogit, direction = "backward", 
                      trace = FALSE)

summary(step.model)
##AIC 
AIC(mylogit, step.model)

###############Step 6: Assess whether to keep variables with higher P-values ##########
summary(step.model)

model0 <- svyglm(UCN_010~CCC_280+ DHHGAGE +DHH_SEX 
                 + GEN_10 + EDUDH04 
                 + HCU_1AA + GEN_01 + GEOGPRV, weight_full, 
                 start =NULL, rescale=TRUE, influence= FALSE)

model1 <- svyglm(UCN_010~CCC_280+ DHHGAGE + INCG2 +DHH_SEX 
                 + GEN_10 + EDUDH04 
                 + HCU_1AA + GEN_01 + GEOGPRV, weight_full, 
                 start =NULL, rescale=TRUE, influence= FALSE)

model2 <- svyglm(UCN_010~CCC_280+ DHHGAGE + INCG2 +DHH_SEX 
                 + GEN_10 + SDCGCGT+ EDUDH04  
                 + HCU_1AA + GEN_01 + GEOGPRV, weight_full, 
                 start =NULL, rescale=TRUE, influence= FALSE)

model3 <- svyglm(UCN_010~CCC_280+ DHHGAGE + INCG2 +DHH_SEX 
                 + GEN_10 + SDCGCGT+ EDUDH04 + DHHGMS  
                 + HCU_1AA + GEN_01 + GEOGPRV, weight_full, 
                 start =NULL, rescale=TRUE, influence= FALSE)

model4 <- svyglm(UCN_010~CCC_280+ DHHGAGE + INCG2 +DHH_SEX 
                 + GEN_10 + SDCGCGT+ EDUDH04 + DHHGMS +SDCFIMM 
                 + HCU_1AA + GEN_01 + GEOGPRV, weight_full, 
                 start =NULL, rescale=TRUE, influence= FALSE)

model5 <- svyglm(UCN_010~CCC_280+ DHHGAGE + INCG2 +DHH_SEX 
                 + GEN_10 + SDCGCGT+ EDUDH04 + DHHGMS +SDCFIMM 
                 + HCU_1AA + GEN_01 + GEOGPRV + DOINS, weight_full, 
                 start =NULL, rescale=TRUE, influence= FALSE)

##use Anova and Wald Test
anova(model0, model1, method = "Wald")
anova(model1, model2, method = "Wald")
anova(model2, model3, method = "Wald")
anova(model3, model4, method = "Wald")
anova(model4, model5, method = "Wald")

##AIC 
AIC(model1, model2, model3, model4, step.model)

#best model is step model and all co-variates should be kept 

######################Step 7: test final fit of model######################


# Archer-Lemeshow Goodness of Fit Test for
# Survey Data with Logistic Regression
AL.gof<-function(fit=fit7, data = analyticdata,
                 weight = "WTS_M"){
  
  r <- residuals(fit, type="response")
  f<-fitted(fit)
  g<- cut(f, c(-Inf, quantile(f,  (1:9)/10, Inf)))
  data2g <- cbind(data,r,g)
  newdesign <- svydesign(id=~1,
                         weights=as.formula(paste0("~",weight)),
                         data=data2g)
  decilemodel<- svyglm(r~g, design=newdesign)
  res <- regTermTest(decilemodel, ~g)
  return(res)
}

# Archer and Lemeshow test
AL.gof(step.model, full2014, weight = "WTS_M")

# p=0.16; no evidence of lack of fit.


#################Step 7: perform regression analysis########### 
install.packages("epiR")
library(epiR)

#unadjusted OR 
mood_table <- svyglm(UCN_010~CCC_280 , weight_full, 
                    start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(mood_table), confint(mood_table,level=0.999)))

age_table <- svyglm(UCN_010~DHHGAGE , weight_full, 
                 start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(age_table), confint(age_table,level=0.999)))

sex_table <- svyglm(UCN_010~ DHH_SEX, weight_full, 
                    start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(sex_table), confint(sex_table,level=0.999)))

income_table <- svyglm(UCN_010~ INCG2, weight_full, 
                    start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(income_table), confint(income_table,level=0.999)))

self_table <- svyglm(UCN_010~ GEN_01, weight_full, 
                       start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(self_table), confint(self_table,level=0.999)))

marry_table <- svyglm(UCN_010~ DHHGMS, weight_full, 
                     start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(marry_table), confint(marry_table,level=0.999)))

community_table <- svyglm(UCN_010~ GEN_10, weight_full, 
                      start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(community_table), confint(community_table,level=0.999)))

prov_table <- svyglm(UCN_010~ GEOGPRV, weight_full, 
                          start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(prov_table), confint(prov_table,level=0.999)))

doc_table <- svyglm(UCN_010~ HCU_1AA, weight_full, 
                     start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(doc_table), confint(doc_table,level=0.999)))

race_table <- svyglm(UCN_010~ SDCGCGT, weight_full, 
                    start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(race_table), confint(race_table,level=0.999)))

immigrant_table <- svyglm(UCN_010~ SDCFIMM, weight_full, 
                     start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(immigrant_table), confint(immigrant_table,level=0.999)))

education_table <- svyglm(UCN_010~ EDUDH04, weight_full, 
                          start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(education_table), confint(education_table,level=0.999)))

insurance_table <- svyglm(UCN_010~ DOINS, weight_full, 
                          start =NULL, rescale=TRUE, influence= FALSE)
exp(cbind(ODDs=coef(insurance_table), confint(insurance_table,level=0.999)))

#adjusted OR
step.model
exp(cbind(ODDs=coef(step.model), confint(step.model,level=0.999)))
